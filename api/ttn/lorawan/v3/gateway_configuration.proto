

syntax = "proto3";

package ttn.lorawan.v3;

import "google/api/annotations.proto";
import "ttn/lorawan/v3/identifiers.proto";
import "validate/validate.proto";

option go_package = "go.thethings.network/lorawan-stack/v3/pkg/ttnpb";

message GetGatewayConfigurationRequest {
  GatewayIdentifiers gateway_ids = 1 [(validate.rules).message.required = true];
  string format = 2 [(validate.rules).string = {
    pattern: "^[a-z0-9](?:[-]?[a-z0-9]){2,}$|^$",
    max_len: 36
  }];
  string type = 3 [(validate.rules).string = {
    pattern: "^[a-z0-9](?:[-]?[a-z0-9]){2,}$|^$",
    max_len: 36
  }];
  string filename = 4 [(validate.rules).string = {
    pattern: "^[a-z0-9](?:[-._]?[a-z0-9]){2,}$|^$",
    max_len: 36
  }];
}

message GetGatewayConfigurationResponse {
  bytes contents = 1;
}

service GatewayConfigurationService {
  rpc GetGatewayConfiguration(GetGatewayConfigurationRequest) returns (GetGatewayConfigurationResponse) {
    option (google.api.http) = {
      additional_bindings {get: "/gcs/gateways/configuration/{gateway_ids.gateway_id}/{format}/{filename}"}
      additional_bindings {get: "/gcs/gateways/configuration/{gateway_ids.gateway_id}/{format}/{type}/{filename}"}
    };
  }
}
