package auth_test

import (
	"testing"

	"github.com/smarty/assertions"
	. "go.thethings.network/lorawan-stack/v3/pkg/auth"
	"go.thethings.network/lorawan-stack/v3/pkg/auth/pbkdf2"
	"go.thethings.network/lorawan-stack/v3/pkg/util/test"
	"go.thethings.network/lorawan-stack/v3/pkg/util/test/assertions/should"
)

func TestHash(t *testing.T) {
	a := assertions.New(t)

	ctx := NewContextWithHashValidator(test.Context(), pbkdf2.Default())

	plain := "secret"

	p, err := Hash(ctx, plain)
	a.So(err, should.BeNil)

	{
		ok, err := Validate(p, plain)
		a.So(err, should.BeNil)
		a.So(ok, should.BeTrue)
	}

	{
		ok, err := Validate(p, "somethingelse")
		a.So(err, should.BeNil)
		a.So(ok, should.BeFalse)
	}

	{
		ok, err := Validate("foo", "somethingelse")
		a.So(err, should.NotBeNil)
		a.So(ok, should.BeFalse)
	}

	{
		ok, err := Validate("LOL$foo", "somethingelse")
		a.So(err, should.NotBeNil)
		a.So(ok, should.BeFalse)
	}

	{
		ok, err := Validate("PBKDF2$foo", "somethingelse")
		a.So(err, should.NotBeNil)
		a.So(ok, should.BeFalse)
	}
}

func TestLegacy(t *testing.T) {
	a := assertions.New(t)

	// this is a pair generated by django
	ok, err := Validate("pbkdf2$sha256$30000$salt$4v3K66vbKbwv3vnwnf32hdzoK8O03GOiBcWFNHul9bo", "secret")
	a.So(err, should.BeNil)
	a.So(ok, should.BeTrue)
}
